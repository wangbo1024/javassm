<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


    <!-- 开启注解模式 -->
    <context:annotation-config/>
    <!-- 扫描注解包 -->
    <context:component-scan base-package="com.thinkpad.*"></context:component-scan>

    <!-- 数据库连接池对象 -->
    <context:property-placeholder
            location="classpath:jdbc.properties"></context:property-placeholder>
    <!-- 阿里 druid数据库连接池 -->
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <property name="driverClassName" value="${driverClassName}" />
        <property name="filters" value="${filters}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${maxActive}" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${minIdle}" />
    </bean>


    <!-- spring 整合mybatis 使用的工具类 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描我们制定目录下的mapper.xml文件 -->
        <!--<property name="mapperLocations"
                  value="classpath:mapper/*.xml"></property>-->
        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation"
                  value="classpath:sqlMapConfig.xml"></property>
        <!-- 引入pagehelper分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 加载我们的mapper xml 和 mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.thinkpad.mapper"/>
    </bean>

    <!--<import resource="classpath:beans_transaction.xml"></import> -->
    <!--<bean name="customerController" class ="com.ujiuye.cus.controller.CustomerController"></bean> -->

    <!-- 引入spring提供的事务管理 -->
    <bean id="tm"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- transaction-manager: 值就是spring提供的那个事务管理器的id值 -->
    <tx:advice id="myadvice" transaction-manager="tm">
        <tx:attributes>
            <tx:method name="add*" isolation="READ_COMMITTED"
                       propagation="REQUIRED" />
            <tx:method name="save*" isolation="READ_COMMITTED"
                       propagation="REQUIRED" />
            <tx:method name="delete*" isolation="READ_COMMITTED"
                       propagation="REQUIRED" />
            <tx:method name="update*" isolation="READ_COMMITTED"
                       propagation="REQUIRED" />
            <tx:method name="drop*" isolation="READ_COMMITTED"
                       propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut
                expression="execution(* com.thinkpad.service.*.*(..))" id="pt" />
        <aop:advisor advice-ref="myadvice" pointcut-ref="pt" />
    </aop:config>

</beans>